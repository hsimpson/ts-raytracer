#ifndef METALMATERIAL_INC
#define METALMATERIAL_INC

#extension GL_GOOGLE_include_directive : enable

#include "../utils.comp"
#include "../ray.comp"

struct MetalMaterial {
  vec3  albedo;
  float roughness;
};

layout(std430, set = 0, binding = 7) buffer MetalMaterials {
  MetalMaterial metalMaterials[];
};

bool metalScatter(const MetalMaterial metalMaterial, const Ray ray, const HitRecord rec, out vec3 attenuation, out Ray scattered) {
  vec3 reflected = reflect(normalize(ray.direction), rec.normal);
  scattered      = Ray(rec.p, reflected + metalMaterial.roughness * randomInUnitSphere(), ray.time);
  attenuation    = metalMaterial.albedo;
  return (dot(scattered.direction, rec.normal) > 0.0);

  // attenuation = vec3(metalMaterial.roughness, 0.0, 0.0);
  // attenuation = metalMaterial.albedo;
  return true;
}

#endif  //METALMATERIAL_INC
